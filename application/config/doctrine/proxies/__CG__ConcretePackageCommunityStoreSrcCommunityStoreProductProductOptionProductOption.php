<?php

namespace DoctrineProxies\__CG__\Concrete\Package\CommunityStore\Src\CommunityStore\Product\ProductOption;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ProductOption extends \Concrete\Package\CommunityStore\Src\CommunityStore\Product\ProductOption\ProductOption implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'poID', 'pID', 'product', 'optionItems', 'poName', 'poType', 'poDisplayType', 'poHandle', 'poDetails', 'poRequired', 'poIncludeVariations', 'poSort'];
        }

        return ['__isInitialized__', 'poID', 'pID', 'product', 'optionItems', 'poName', 'poType', 'poDisplayType', 'poHandle', 'poDetails', 'poRequired', 'poIncludeVariations', 'poSort'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ProductOption $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setProduct($product)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProduct', [$product]);

        return parent::setProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function getID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getID', []);

        return parent::getID();
    }

    /**
     * {@inheritDoc}
     */
    public function getProductID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductID', []);

        return parent::getProductID();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function getSort()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSort', []);

        return parent::getSort();
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayType', []);

        return parent::getDisplayType();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplayType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplayType', [$type]);

        return parent::setDisplayType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getHandle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHandle', []);

        return parent::getHandle();
    }

    /**
     * {@inheritDoc}
     */
    public function setHandle($poHandle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHandle', [$poHandle]);

        return parent::setHandle($poHandle);
    }

    /**
     * {@inheritDoc}
     */
    public function getDetails()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDetails', []);

        return parent::getDetails();
    }

    /**
     * {@inheritDoc}
     */
    public function setDetails($poDetails)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDetails', [$poDetails]);

        return parent::setDetails($poDetails);
    }

    /**
     * {@inheritDoc}
     */
    public function getRequired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRequired', []);

        return parent::getRequired();
    }

    /**
     * {@inheritDoc}
     */
    public function setRequired($poRequired)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRequired', [$poRequired]);

        return parent::setRequired($poRequired);
    }

    /**
     * {@inheritDoc}
     */
    public function getIncludeVariations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIncludeVariations', []);

        return parent::getIncludeVariations();
    }

    /**
     * {@inheritDoc}
     */
    public function setIncludeVariations($poIncludeVariations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIncludeVariations', [$poIncludeVariations]);

        return parent::setIncludeVariations($poIncludeVariations);
    }

    /**
     * {@inheritDoc}
     */
    public function getOptionItems()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOptionItems', []);

        return parent::getOptionItems();
    }

    /**
     * {@inheritDoc}
     */
    public function update($product, $name, $sort, $type = '', $handle = '', $required = false, $includeVariations = false, $displayType = '', $details = '')
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'update', [$product, $name, $sort, $type, $handle, $required, $includeVariations, $displayType, $details]);

        return parent::update($product, $name, $sort, $type, $handle, $required, $includeVariations, $displayType, $details);
    }

    /**
     * {@inheritDoc}
     */
    public function save($persistonly = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'save', [$persistonly]);

        return parent::save($persistonly);
    }

    /**
     * {@inheritDoc}
     */
    public function delete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delete', []);

        return parent::delete();
    }

}
