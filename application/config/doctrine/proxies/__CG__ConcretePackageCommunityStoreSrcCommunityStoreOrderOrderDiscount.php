<?php

namespace DoctrineProxies\__CG__\Concrete\Package\CommunityStore\Src\CommunityStore\Order;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class OrderDiscount extends \Concrete\Package\CommunityStore\Src\CommunityStore\Order\OrderDiscount implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'odID', 'order', 'odName', 'odDisplay', 'odDeductType', 'odValue', 'odPercentage', 'odDeductFrom', 'odCode'];
        }

        return ['__isInitialized__', 'odID', 'order', 'odName', 'odDisplay', 'odDeductType', 'odValue', 'odPercentage', 'odDeductFrom', 'odCode'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (OrderDiscount $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getID', []);

        return parent::getID();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrder', []);

        return parent::getOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrder($order)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrder', [$order]);

        return parent::setOrder($order);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($odName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$odName]);

        return parent::setName($odName);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplay', []);

        return parent::getDisplay();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplay($odDisplay)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplay', [$odDisplay]);

        return parent::setDisplay($odDisplay);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeductType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeductType', []);

        return parent::getDeductType();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeductType($odDeductType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeductType', [$odDeductType]);

        return parent::setDeductType($odDeductType);
    }

    /**
     * {@inheritDoc}
     */
    public function getValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValue', []);

        return parent::getValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setValue($odValue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValue', [$odValue]);

        return parent::setValue($odValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getPercentage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPercentage', []);

        return parent::getPercentage();
    }

    /**
     * {@inheritDoc}
     */
    public function setPercentage($odPercentage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPercentage', [$odPercentage]);

        return parent::setPercentage($odPercentage);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeductFrom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeductFrom', []);

        return parent::getDeductFrom();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeductFrom($odDeductFrom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeductFrom', [$odDeductFrom]);

        return parent::setDeductFrom($odDeductFrom);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', []);

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode($odCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', [$odCode]);

        return parent::setCode($odCode);
    }

    /**
     * {@inheritDoc}
     */
    public function save()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'save', []);

        return parent::save();
    }

    /**
     * {@inheritDoc}
     */
    public function delete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delete', []);

        return parent::delete();
    }

}
