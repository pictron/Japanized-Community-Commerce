<?php

namespace DoctrineProxies\__CG__\Concrete\Package\CommunityStore\Src\CommunityStore\Payment;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Method extends \Concrete\Package\CommunityStore\Src\CommunityStore\Payment\Method implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'pmID', 'pmHandle', 'pmName', 'pmDisplayName', 'pmButtonLabel', 'pmUserGroups', 'pmExcludedUserGroups', 'pmEnabled', 'pmSortOrder', 'pkgID', '' . "\0" . 'Concrete\\Package\\CommunityStore\\Src\\CommunityStore\\Payment\\Method' . "\0" . 'methodController', 'view', 'viewPath', 'theme', 'controllerActionPath', 'themeViewTemplate', 'helpers', 'sets', 'action', 'request', 'parameters', 'app'];
        }

        return ['__isInitialized__', 'pmID', 'pmHandle', 'pmName', 'pmDisplayName', 'pmButtonLabel', 'pmUserGroups', 'pmExcludedUserGroups', 'pmEnabled', 'pmSortOrder', 'pkgID', '' . "\0" . 'Concrete\\Package\\CommunityStore\\Src\\CommunityStore\\Payment\\Method' . "\0" . 'methodController', 'view', 'viewPath', 'theme', 'controllerActionPath', 'themeViewTemplate', 'helpers', 'sets', 'action', 'request', 'parameters', 'app'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Method $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getID', []);

        return parent::getID();
    }

    /**
     * {@inheritDoc}
     */
    public function getHandle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHandle', []);

        return parent::getHandle();
    }

    /**
     * {@inheritDoc}
     */
    public function setHandle($handle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHandle', [$handle]);

        return parent::setHandle($handle);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getButtonLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getButtonLabel', []);

        return parent::getButtonLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function setButtonLabel($pmButtonLabel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setButtonLabel', [$pmButtonLabel]);

        return parent::setButtonLabel($pmButtonLabel);
    }

    /**
     * {@inheritDoc}
     */
    public function getPackageID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPackageID', []);

        return parent::getPackageID();
    }

    /**
     * {@inheritDoc}
     */
    public function setPackageID($pkgID)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPackageID', [$pkgID]);

        return parent::setPackageID($pkgID);
    }

    /**
     * {@inheritDoc}
     */
    public function getSortOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSortOrder', []);

        return parent::getSortOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setSortOrder($order)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSortOrder', [$order]);

        return parent::setSortOrder($order);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayName', []);

        return parent::getDisplayName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplayName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplayName', [$name]);

        return parent::setDisplayName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', [$status]);

        return parent::setEnabled($status);
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserGroups', []);

        return parent::getUserGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserGroups($userGroups)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserGroups', [$userGroups]);

        return parent::setUserGroups($userGroups);
    }

    /**
     * {@inheritDoc}
     */
    public function getExcludedUserGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExcludedUserGroups', []);

        return parent::getExcludedUserGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function setExcludedUserGroups($userGroups)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExcludedUserGroups', [$userGroups]);

        return parent::setExcludedUserGroups($userGroups);
    }

    /**
     * {@inheritDoc}
     */
    public function getMethodDirectory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMethodDirectory', []);

        return parent::getMethodDirectory();
    }

    /**
     * {@inheritDoc}
     */
    public function getMethodController()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMethodController', []);

        return parent::getMethodController();
    }

    /**
     * {@inheritDoc}
     */
    public function renderCheckoutForm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'renderCheckoutForm', []);

        return parent::renderCheckoutForm();
    }

    /**
     * {@inheritDoc}
     */
    public function renderDashboardForm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'renderDashboardForm', []);

        return parent::renderDashboardForm();
    }

    /**
     * {@inheritDoc}
     */
    public function renderRedirectForm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'renderRedirectForm', []);

        return parent::renderRedirectForm();
    }

    /**
     * {@inheritDoc}
     */
    public function submitPayment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'submitPayment', []);

        return parent::submitPayment();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentMinimum()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentMinimum', []);

        return parent::getPaymentMinimum();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentMaximum()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentMaximum', []);

        return parent::getPaymentMaximum();
    }

    /**
     * {@inheritDoc}
     */
    public function save(array $data = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'save', [$data]);

        return parent::save($data);
    }

    /**
     * {@inheritDoc}
     */
    public function delete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delete', []);

        return parent::delete();
    }

    /**
     * {@inheritDoc}
     */
    public function remove()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'remove', []);

        return parent::remove();
    }

    /**
     * {@inheritDoc}
     */
    public function isExternal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isExternal', []);

        return parent::isExternal();
    }

    /**
     * {@inheritDoc}
     */
    public function markPaid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'markPaid', []);

        return parent::markPaid();
    }

    /**
     * {@inheritDoc}
     */
    public function sendReceipt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'sendReceipt', []);

        return parent::sendReceipt();
    }

    /**
     * {@inheritDoc}
     */
    public function redirectForm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'redirectForm', []);

        return parent::redirectForm();
    }

    /**
     * {@inheritDoc}
     */
    public function checkoutForm()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'checkoutForm', []);

        return parent::checkoutForm();
    }

    /**
     * {@inheritDoc}
     */
    public function getPaymentInstructions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaymentInstructions', []);

        return parent::getPaymentInstructions();
    }

    /**
     * {@inheritDoc}
     */
    public function setViewObject(\Concrete\Core\View\View $view)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setViewObject', [$view]);

        return parent::setViewObject($view);
    }

    /**
     * {@inheritDoc}
     */
    public function setTheme($mixed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTheme', [$mixed]);

        return parent::setTheme($mixed);
    }

    /**
     * {@inheritDoc}
     */
    public function getTheme()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTheme', []);

        return parent::getTheme();
    }

    /**
     * {@inheritDoc}
     */
    public function setThemeViewTemplate($template)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setThemeViewTemplate', [$template]);

        return parent::setThemeViewTemplate($template);
    }

    /**
     * {@inheritDoc}
     */
    public function getThemeViewTemplate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getThemeViewTemplate', []);

        return parent::getThemeViewTemplate();
    }

    /**
     * {@inheritDoc}
     */
    public function getControllerActionPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getControllerActionPath', []);

        return parent::getControllerActionPath();
    }

    /**
     * {@inheritDoc}
     */
    public function flash($key, $value, $isHTML = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'flash', [$key, $value, $isHTML]);

        return parent::flash($key, $value, $isHTML);
    }

    /**
     * {@inheritDoc}
     */
    public function getViewObject()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getViewObject', []);

        return parent::getViewObject();
    }

    /**
     * {@inheritDoc}
     */
    public function action()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'action', []);

        return parent::action();
    }

    /**
     * {@inheritDoc}
     */
    public function getRequest()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRequest', []);

        return parent::getRequest();
    }

    /**
     * {@inheritDoc}
     */
    public function setRequest($request)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRequest', [$request]);

        return parent::setRequest($request);
    }

    /**
     * {@inheritDoc}
     */
    public function requireAsset()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'requireAsset', []);

        return parent::requireAsset();
    }

    /**
     * {@inheritDoc}
     */
    public function addHeaderItem($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addHeaderItem', [$item]);

        return parent::addHeaderItem($item);
    }

    /**
     * {@inheritDoc}
     */
    public function addFooterItem($item)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFooterItem', [$item]);

        return parent::addFooterItem($item);
    }

    /**
     * {@inheritDoc}
     */
    public function set($key, $val)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'set', [$key, $val]);

        return parent::set($key, $val);
    }

    /**
     * {@inheritDoc}
     */
    public function getSets()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSets', []);

        return parent::getSets();
    }

    /**
     * {@inheritDoc}
     */
    public function shouldRunControllerTask()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'shouldRunControllerTask', []);

        return parent::shouldRunControllerTask();
    }

    /**
     * {@inheritDoc}
     */
    public function getHelperObjects()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHelperObjects', []);

        return parent::getHelperObjects();
    }

    /**
     * {@inheritDoc}
     */
    public function get($key = NULL, $defaultValue = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'get', [$key, $defaultValue]);

        return parent::get($key, $defaultValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getTask()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTask', []);

        return parent::getTask();
    }

    /**
     * {@inheritDoc}
     */
    public function getAction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAction', []);

        return parent::getAction();
    }

    /**
     * {@inheritDoc}
     */
    public function getParameters()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParameters', []);

        return parent::getParameters();
    }

    /**
     * {@inheritDoc}
     */
    public function on_start()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'on_start', []);

        return parent::on_start();
    }

    /**
     * {@inheritDoc}
     */
    public function on_before_render()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'on_before_render', []);

        return parent::on_before_render();
    }

    /**
     * {@inheritDoc}
     */
    public function isPost()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPost', []);

        return parent::isPost();
    }

    /**
     * {@inheritDoc}
     */
    public function post($key = NULL, $defaultValue = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'post', [$key, $defaultValue]);

        return parent::post($key, $defaultValue);
    }

    /**
     * {@inheritDoc}
     */
    public function redirect()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'redirect', []);

        return parent::redirect();
    }

    /**
     * {@inheritDoc}
     */
    public function buildRedirect($destination, $httpResponseCode = 302)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'buildRedirect', [$destination, $httpResponseCode]);

        return parent::buildRedirect($destination, $httpResponseCode);
    }

    /**
     * {@inheritDoc}
     */
    public function runTask($action, $parameters)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'runTask', [$action, $parameters]);

        return parent::runTask($action, $parameters);
    }

    /**
     * {@inheritDoc}
     */
    public function runAction($action, $parameters = array (
))
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'runAction', [$action, $parameters]);

        return parent::runAction($action, $parameters);
    }

    /**
     * {@inheritDoc}
     */
    public function request($key = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'request', [$key]);

        return parent::request($key);
    }

    /**
     * {@inheritDoc}
     */
    public function setApplication(\Concrete\Core\Application\Application $app)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApplication', [$app]);

        return parent::setApplication($app);
    }

}
