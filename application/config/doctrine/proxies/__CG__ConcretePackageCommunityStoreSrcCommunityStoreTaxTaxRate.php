<?php

namespace DoctrineProxies\__CG__\Concrete\Package\CommunityStore\Src\CommunityStore\Tax;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TaxRate extends \Concrete\Package\CommunityStore\Src\CommunityStore\Tax\TaxRate implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'trID', 'taxEnabled', 'taxLabel', 'taxRate', 'taxBasedOn', 'taxAddress', 'taxCountry', 'taxState', 'taxCity', 'taxVatExclude'];
        }

        return ['__isInitialized__', 'trID', 'taxEnabled', 'taxLabel', 'taxRate', 'taxBasedOn', 'taxAddress', 'taxCountry', 'taxState', 'taxCity', 'taxVatExclude'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TaxRate $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setEnabled($enabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', [$enabled]);

        return parent::setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxLabel($label)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxLabel', [$label]);

        return parent::setTaxLabel($label);
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxRate($rate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxRate', [$rate]);

        return parent::setTaxRate($rate);
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxBasedOn($basedOn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxBasedOn', [$basedOn]);

        return parent::setTaxBasedOn($basedOn);
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxAddress($address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxAddress', [$address]);

        return parent::setTaxAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxCountry(array $countries = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxCountry', [$countries]);

        return parent::setTaxCountry($countries);
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxState($state)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxState', [$state]);

        return parent::setTaxState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxCity($city)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxCity', [$city]);

        return parent::setTaxCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function setTaxVatExclude($exclude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTaxVatExclude', [$exclude]);

        return parent::setTaxVatExclude($exclude);
    }

    /**
     * {@inheritDoc}
     */
    public function getID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getID', []);

        return parent::getID();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxRateID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxRateID', []);

        return parent::getTaxRateID();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxLabel', []);

        return parent::getTaxLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxRate', []);

        return parent::getTaxRate();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxBasedOn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxBasedOn', []);

        return parent::getTaxBasedOn();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxAddress', []);

        return parent::getTaxAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxCountry', []);

        return parent::getTaxCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxState', []);

        return parent::getTaxState();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxCity', []);

        return parent::getTaxCity();
    }

    /**
     * {@inheritDoc}
     */
    public function getTaxVatExclude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTaxVatExclude', []);

        return parent::getTaxVatExclude();
    }

    /**
     * {@inheritDoc}
     */
    public function isVatNumberEligible()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isVatNumberEligible', []);

        return parent::isVatNumberEligible();
    }

    /**
     * {@inheritDoc}
     */
    public function isTaxable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isTaxable', []);

        return parent::isTaxable();
    }

    /**
     * {@inheritDoc}
     */
    public function calculate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'calculate', []);

        return parent::calculate();
    }

    /**
     * {@inheritDoc}
     */
    public function calculateProduct($productObj, $qty)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'calculateProduct', [$productObj, $qty]);

        return parent::calculateProduct($productObj, $qty);
    }

    /**
     * {@inheritDoc}
     */
    public function save()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'save', []);

        return parent::save();
    }

    /**
     * {@inheritDoc}
     */
    public function delete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delete', []);

        return parent::delete();
    }

}
