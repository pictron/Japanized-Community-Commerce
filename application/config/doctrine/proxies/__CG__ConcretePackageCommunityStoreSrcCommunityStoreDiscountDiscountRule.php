<?php

namespace DoctrineProxies\__CG__\Concrete\Package\CommunityStore\Src\CommunityStore\Discount;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class DiscountRule extends \Concrete\Package\CommunityStore\Src\CommunityStore\Discount\DiscountRule implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'drID', 'drName', 'drEnabled', 'drDisplay', 'drDescription', 'drDeductType', 'drValue', 'drPercentage', 'drDeductFrom', 'drTrigger', 'drSingleUseCodes', 'drCurrency', 'drValidFrom', 'drValidTo', 'drProductGroups', 'drUserGroups', 'drQuantity', 'drMaximumQuantity', 'drDiscountSalePrices', 'drDateAdded', 'drDeleted', 'applicableTotal', '' . "\0" . 'Concrete\\Package\\CommunityStore\\Src\\CommunityStore\\Discount\\DiscountRule' . "\0" . 'codes'];
        }

        return ['__isInitialized__', 'drID', 'drName', 'drEnabled', 'drDisplay', 'drDescription', 'drDeductType', 'drValue', 'drPercentage', 'drDeductFrom', 'drTrigger', 'drSingleUseCodes', 'drCurrency', 'drValidFrom', 'drValidTo', 'drProductGroups', 'drUserGroups', 'drQuantity', 'drMaximumQuantity', 'drDiscountSalePrices', 'drDateAdded', 'drDeleted', 'applicableTotal', '' . "\0" . 'Concrete\\Package\\CommunityStore\\Src\\CommunityStore\\Discount\\DiscountRule' . "\0" . 'codes'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (DiscountRule $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getApplicableTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApplicableTotal', []);

        return parent::getApplicableTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function setApplicableTotal($applicableTotal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setApplicableTotal', [$applicableTotal]);

        return parent::setApplicableTotal($applicableTotal);
    }

    /**
     * {@inheritDoc}
     */
    public function returnDiscountedPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'returnDiscountedPrice', []);

        return parent::returnDiscountedPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function returnFormattedDiscountedPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'returnFormattedDiscountedPrice', []);

        return parent::returnFormattedDiscountedPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function getCodes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodes', []);

        return parent::getCodes();
    }

    /**
     * {@inheritDoc}
     */
    public function getID()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getID', []);

        return parent::getID();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($drName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$drName]);

        return parent::setName($drName);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnabled', []);

        return parent::getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($drEnabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', [$drEnabled]);

        return parent::setEnabled($drEnabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplay', []);

        return parent::getDisplay();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplay($drDisplay)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplay', [$drDisplay]);

        return parent::setDisplay($drDisplay);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($drDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$drDescription]);

        return parent::setDescription($drDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeductType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeductType', []);

        return parent::getDeductType();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeductType($drDeductType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeductType', [$drDeductType]);

        return parent::setDeductType($drDeductType);
    }

    /**
     * {@inheritDoc}
     */
    public function getValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValue', []);

        return parent::getValue();
    }

    /**
     * {@inheritDoc}
     */
    public function setValue($drValue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValue', [$drValue]);

        return parent::setValue($drValue);
    }

    /**
     * {@inheritDoc}
     */
    public function getPercentage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPercentage', []);

        return parent::getPercentage();
    }

    /**
     * {@inheritDoc}
     */
    public function setPercentage($drPercentage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPercentage', [$drPercentage]);

        return parent::setPercentage($drPercentage);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeductFrom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeductFrom', []);

        return parent::getDeductFrom();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeductFrom($drDeductFrom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeductFrom', [$drDeductFrom]);

        return parent::setDeductFrom($drDeductFrom);
    }

    /**
     * {@inheritDoc}
     */
    public function getTrigger()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrigger', []);

        return parent::getTrigger();
    }

    /**
     * {@inheritDoc}
     */
    public function setTrigger($drTrigger)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTrigger', [$drTrigger]);

        return parent::setTrigger($drTrigger);
    }

    /**
     * {@inheritDoc}
     */
    public function requiresCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'requiresCode', []);

        return parent::requiresCode();
    }

    /**
     * {@inheritDoc}
     */
    public function getSingleUseCodes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSingleUseCodes', []);

        return parent::getSingleUseCodes();
    }

    /**
     * {@inheritDoc}
     */
    public function isSingleUse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isSingleUse', []);

        return parent::isSingleUse();
    }

    /**
     * {@inheritDoc}
     */
    public function setSingleUseCodes($drSingleUseCodes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSingleUseCodes', [$drSingleUseCodes]);

        return parent::setSingleUseCodes($drSingleUseCodes);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrency()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrency', []);

        return parent::getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrency($drCurrency)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrency', [$drCurrency]);

        return parent::setCurrency($drCurrency);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidFrom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidFrom', []);

        return parent::getValidFrom();
    }

    /**
     * {@inheritDoc}
     */
    public function setValidFrom($drValidFrom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValidFrom', [$drValidFrom]);

        return parent::setValidFrom($drValidFrom);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidTo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidTo', []);

        return parent::getValidTo();
    }

    /**
     * {@inheritDoc}
     */
    public function setValidTo($drValidTo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValidTo', [$drValidTo]);

        return parent::setValidTo($drValidTo);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductGroups', []);

        return parent::getProductGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function setProductGroups($drProductGroups)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProductGroups', [$drProductGroups]);

        return parent::setProductGroups($drProductGroups);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserGroups', []);

        return parent::getUserGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserGroups($drUserGroups)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserGroups', [$drUserGroups]);

        return parent::setUserGroups($drUserGroups);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantity', []);

        return parent::getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantity($drQuantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantity', [$drQuantity]);

        return parent::setQuantity($drQuantity);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaximumQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaximumQuantity', []);

        return parent::getMaximumQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaximumQuantity($drMaximumQuantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaximumQuantity', [$drMaximumQuantity]);

        return parent::setMaximumQuantity($drMaximumQuantity);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiscountSalePrices()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiscountSalePrices', []);

        return parent::getDiscountSalePrices();
    }

    /**
     * {@inheritDoc}
     */
    public function setDiscountSalePrices($drDiscountSalePrices)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiscountSalePrices', [$drDiscountSalePrices]);

        return parent::setDiscountSalePrices($drDiscountSalePrices);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateAdded()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateAdded', []);

        return parent::getDateAdded();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateAdded($drDateAdded)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateAdded', [$drDateAdded]);

        return parent::setDateAdded($drDateAdded);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeleted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeleted', []);

        return parent::getDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeleted($drDeleted)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeleted', [$drDeleted]);

        return parent::setDeleted($drDeleted);
    }

    /**
     * {@inheritDoc}
     */
    public function getFullDisplay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFullDisplay', []);

        return parent::getFullDisplay();
    }

    /**
     * {@inheritDoc}
     */
    public function retrieveStatistics()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'retrieveStatistics', []);

        return parent::retrieveStatistics();
    }

    /**
     * {@inheritDoc}
     */
    public function save()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'save', []);

        return parent::save();
    }

    /**
     * {@inheritDoc}
     */
    public function delete()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'delete', []);

        return parent::delete();
    }

}
